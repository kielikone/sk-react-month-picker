{"version":3,"sources":["components/MonthPicker/MonthPicker.styled.js","components/MonthPicker/Selector/Selector.styled.js","components/MonthPicker/Selector/Selector.js","components/MonthPicker/MonthPicker.js","App.js","reportWebVitals.js","index.js"],"names":["Selected","styled","div","_templateObject","_taggedTemplateLiteral","TitleWrapper","_templateObject2","SelectedText","_templateObject3","Modal","Presets","MonthPicker","Title","_templateObject4","Preset","_templateObject5","YearPicker","_templateObject6","YearTitle","_templateObject7","Months","_templateObject8","Month","_templateObject9","props","highlightCol","disabled","dayjs","extend","isSameOrAfter","isSameOrBefore","Selector","_ref","presets","onChange","yearIndex","setYearIndex","useState","years","setYears","selected","setSelected","useEffect","ys","year","Number","format","months","map","month","date","toDate","push","length","_jsxs","children","_jsx","p","i","onClick","e","_ref2","start","end","pickPreset","title","FontAwesomeIcon","icon","faChevronCircleLeft","style","width","height","opacity","cursor","faChevronCircleRight","m","className","isAfter","endOf","setSelectedLocal","monthIndex","isBefore","memo","value","closeDelay","selectOpen","setSelectOpen","setTitle","updateTitle","v","presetTitle","find","isSame","faChevronDown","startOf","setTimeout","App","subtract","margin","range","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"kPAEO,MAAMA,EAAWC,IAAOC,IAAGC,MAAAC,YAAA,0JASrBC,EAAeJ,IAAOC,IAAGI,MAAAF,YAAA,qIAQzBG,EAAeN,IAAOC,IAAGM,MAAAJ,YAAA,Q,wDCjB/B,MAAMK,EAAQR,IAAOC,IAAGC,MAAAC,YAAA,uVAkBlBM,EAAUT,IAAOC,IAAGI,MAAAF,YAAA,sGAOpBO,EAAcV,IAAOC,IAAGM,MAAAJ,YAAA,mEAMxBQ,EAAQX,IAAOC,IAAGW,MAAAT,YAAA,0EAMlBU,EAASb,IAAOC,IAAGa,MAAAX,YAAA,uEAMnBY,EAAaf,IAAOC,IAAGe,MAAAb,YAAA,uFAMvBc,EAAYjB,IAAOC,IAAGiB,MAAAf,YAAA,gCAItBgB,EAASnB,IAAOC,IAAGmB,MAAAjB,YAAA,yGAOnBkB,EAAQrB,IAAOC,IAAGqB,MAAAnB,YAAA,kVAUPoB,GAASA,EAAMC,aAAeD,EAAMC,aAAe,YAGvDD,GAASA,EAAME,SAAW,OAAS,SAC1CF,GAASA,EAAME,SAAW,GAAM,IACjCF,GAASA,EAAME,SAAW,UAAY,Y,yBCxDlDC,IAAMC,OAAOC,KACbF,IAAMC,OAAOE,KAEb,MAAMC,EAAWC,IAA0C,IAAzC,QAAEC,EAAO,SAAEC,EAAQ,aAAET,GAAcO,EACnD,MAAOG,EAAWC,GAAgBC,mBAAS,IACpCC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAUC,GAAeJ,mBAAS,IAEzCK,qBAAU,KACR,IAAIC,EAAK,GACT,IAAK,IAAIC,EAAO,KAAMA,GAAQC,OAAOlB,MAAQmB,OAAO,SAAUF,IAAQ,CACpE,MAAMG,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAIC,KAAKC,IAEnD,CACLT,UAAU,EACVU,KAHSvB,IAAMiB,EAAO,IAAMK,EAAQ,gBAAgBE,aAMxDR,EAAGS,KAAK,CAAER,OAAMG,WAElBR,EAASI,GACTP,EAAaO,EAAGU,OAAS,KACxB,IAEHX,qBAAU,KACgB,IAApBF,EAASa,QACXnB,EAASM,KAEV,CAACA,IAEJ,MAmBMI,EAAON,EAAMH,GAEnB,OAAKS,EAKHU,eAAC7C,EAAK,CAAA8C,SAAA,CACHtB,GAAWA,EAAQoB,QAClBC,eAAC5C,EAAO,CAAA6C,SAAA,CACNC,cAAC5C,EAAK,CAAA2C,SAAC,YACNtB,EAAQe,KAAI,CAACS,EAAGC,IACfF,cAAC1C,EAAM,CAAC6C,QAAUC,GAhBTC,KAAqB,IAApB,MAAEC,EAAK,IAAEC,GAAKF,EAChCpB,EAAY,CAACqB,EAAOC,KAeYC,CAAWP,GAAGF,SACnCE,EAAEQ,OADuCP,QAMlDJ,eAAC3C,EAAW,CAAA4C,SAAA,CACVC,cAAC5C,EAAK,CAAA2C,SAAC,0BACPD,eAACtC,EAAU,CAAAuC,SAAA,CACTC,cAACU,IAAe,CACdC,KAAMC,IACNC,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,QAAUrC,EAAkB,EAAN,GACtBsC,OAAStC,EAAwB,UAAZ,WAEvBwB,QAAUC,GAAOzB,EAAYC,EAAaD,EAAY,GAAK,OAE7DqB,cAACtC,EAAS,CAAAqC,SAAEX,EAAKA,OACjBY,cAACU,IAAe,CACdC,KAAMO,IACNL,MAAO,CACLC,MAAO,GACPC,OAAQ,GACRC,QAASrC,IAAcG,EAAMe,OAAS,EAAI,GAAM,EAChDoB,OAAQtC,IAAcG,EAAMe,OAAS,EAAI,UAAY,WAEvDM,QAAUC,GACRzB,EAAYG,EAAMe,OAAS,EAAIjB,EAAaD,EAAY,GAAK,UAInEqB,cAACpC,EAAM,CAAAmC,SACJX,EAAKG,OAAOC,KAAI,CAAC2B,EAAGjB,IAEjBJ,eAAChC,EAAK,CACJG,aAAcA,EACdmD,WACiB,IAAfD,EAAEnC,UACqB,IAApBA,EAASa,QACR1B,IAAMgD,EAAEzB,MAAMrB,cACZF,IAAMa,EAAS,IACf,UAEFb,IAAMgD,EAAEzB,MAAMpB,eAAeH,IAAMa,EAAS,IAAK,SACjD,WACA,GAENd,SAAUC,IAAMgD,EAAEzB,MAAM2B,QAAQlD,MAAQmD,MAAM,UAE9CnB,QAAUC,GAlFCmB,EAACC,EAAY/B,KACpC,IAAIN,EAAK,IAAIL,GACbK,EAAGR,GAAWY,OAAOiC,GAAYxC,UAAW,EAC5CD,EAASI,GACJH,EAASa,OAGR1B,IAAMa,EAAS,IAAIyC,SAAStD,IAAMsB,EAAMC,OAC1CT,EAAY,CAACD,EAAS,GAAIS,EAAMC,OAEhCT,EAAY,CAACQ,EAAMC,KAAMV,EAAS,KALpCC,EAAY,CAACQ,EAAMC,QA6EO6B,CAAiBrB,EAAGiB,GAAGpB,SAAA,CAEtCoB,EAAEnC,SAAS,IAAEb,IAAMgD,EAAEzB,MAAMJ,OAAO,SAH9BY,aA3DV,MAwEIwB,qBAAKnD,GCxDLpB,MAlFKqB,IAOb,IAPc,SACnBE,EAAQ,MACRiD,EAAK,QACLlD,EAAO,MACPoC,EAAK,WACLe,EAAU,aACV3D,GACDO,EACC,MAAOqD,EAAYC,GAAiBjD,oBAAS,IACtC4B,EAAOsB,GAAYlD,oBAAS,GAEnCK,qBAAU,KACR8C,EAAYL,KACX,IAEH,MAAMK,EAAeC,IACnB,IAAKA,GAAKA,EAAEpC,OAAS,EACnB,OAAOkC,EAAS,qBAGlB,MAAMG,EACJzD,GAAWA,EAAQoB,OACfpB,EAAQ0D,MACLlC,IACE9B,IAAM8B,EAAEK,OAAO8B,OAAOjE,IAAM8D,EAAE,IAAK,UAClChC,EAAEK,QAAU2B,EAAE,MACf9D,IAAM8B,EAAEM,KAAK6B,OAAOjE,IAAM8D,EAAE,IAAK,UAAYhC,EAAEM,MAAQ0B,EAAE,MAE9D,KAEN,OAAOF,EACLG,EACIA,EAAYzB,MACZtC,IAAM8D,EAAE,IAAI3C,OAAO,UAAY,MAAQnB,IAAM8D,EAAE,IAAI3C,OAAO,YA0BlE,OACEQ,eAACtD,EAAQ,CAACqE,MAAOA,EAAMd,SAAA,CACrBD,eAACjD,EAAY,CAACsD,QAAUC,GAAM0B,GAAeD,GAAY9B,SAAA,CACvDC,cAACjD,EAAY,CAAAgD,SAAEU,IACfT,cAACU,IAAe,CACdC,KAAM0B,IACNxB,MAAO,CACLC,MAAO,GACPC,OAAQ,SAIbc,GACC7B,cAACzB,EAAQ,CACPE,QAASA,EACTC,SArCauD,IACnBD,EAAYC,GAEY,oBAAbvD,GACTA,EAAS,CACE,OAATuD,EAAE,GACE,KACA9D,IAAM8D,EAAE,IAAIK,QAAQ,SAAShD,OAAO,uBAC/B,OAAT2C,EAAE,GACE,KACA9D,IAAM8D,EAAE,IAAIX,MAAM,SAAShC,OAAO,yBAI1CiD,YACE,KACET,GAAc,KAEhBF,GAA0B,MAoBtB3D,aAAcA,QC3CTuE,MApCf,WACC,MAAM/D,EAAU,CACb,CACEgC,MAAO,aACPH,MAAOnC,MAAQmE,QAAQ,SAAS3C,SAChCY,IAAKpC,MAAQmD,MAAM,SAAS3B,UAE9B,CACEc,MAAO,gBACPH,MAAOnC,MAAQsE,SAAS,EAAG,SAASH,QAAQ,SAAS3C,SACrDY,IAAKpC,MAAQmD,MAAM,SAAS3B,UAE9B,CACEc,MAAO,gBACPH,MAAOnC,MAAQsE,SAAS,EAAG,SAASH,QAAQ,SAAS3C,SACrDY,IAAKpC,MAAQmD,MAAM,SAAS3B,UAE9B,CACEc,MAAO,YACPH,MAAOnC,MAAQmE,QAAQ,QAAQ3C,SAC/BY,IAAKpC,MAAQmD,MAAM,QAAQ3B,WAI/B,OACEK,cAAA,OAAKa,MAAO,CAAEC,MAAO,IAAK4B,OAAQ,aAAc3C,SAC9CC,cAAC7C,EAAW,CACVc,aAAa,OACbQ,QAASA,EACTC,SAAWiE,GAAUC,QAAQC,IAAIF,GACjCf,WAAY,SCrBLkB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAKzE,IAAkD,IAAjD,OAAE0E,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS9E,EACpE0E,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACPxD,cAACyD,IAAMC,WAAU,CAAA3D,SACfC,cAACwC,EAAG,MAENmB,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.e2f60561.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Selected = styled.div`\r\n  border: #eee 1px solid;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  user-select: none;\r\n  min-width: 200px;\r\n\tbackground-color: white;\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 6px 10px;\r\n`;\r\n\r\nexport const SelectedText = styled.div``;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Modal = styled.div`\r\n  background-color: white;\r\n  border: #eee 1px solid;\r\n  position: absolute;\r\n  top: 35px;\r\n  right: 0;\r\n  z-index: 99999;\r\n  width: 425px;\r\n  flex-direction: row;\r\n  display: flex;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 10px 0 rgb(0 0 0 / 20%);\r\n  @media (max-width: 425px) {\r\n    width: 100%;\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Presets = styled.div`\r\n  box-sizing: border-box;\r\n  flex: 0.5;\r\n  padding: 20px;\r\n  border-right: #eee 1px solid;\r\n`;\r\n\r\nexport const MonthPicker = styled.div`\r\n  box-sizing: border-box;\r\n  flex: 1;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  color: #575757;\r\n  margin: 0 0 20px 0;\r\n  user-select: none;\r\n`;\r\n\r\nexport const Preset = styled.div`\r\n  color: #282c34;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const YearPicker = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const YearTitle = styled.div`\r\n  user-select: none;\r\n`;\r\n\r\nexport const Months = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  gap: 5px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const Month = styled.div`\r\n  border: #eee 1px solid;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  background-color: white;\r\n  text-align: center;\r\n  &:hover {\r\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.2);\r\n  }\r\n  &.selected {\r\n    background-color: ${props => props.highlightCol ? props.highlightCol : \"#1d7f7a\"};\r\n    color: white;\r\n  }\r\n  pointer-events: ${props => props.disabled ? \"none\" : \"auto\"};\r\n  opacity: ${props => props.disabled ? 0.5 : 1};\r\n  cursor: ${props => props.disabled ? \"default\" : \"pointer\"};\r\n  transition: .2s;\r\n`;\r\n","import dayjs from 'dayjs';\r\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport React, { memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Presets,\r\n  MonthPicker,\r\n  Title,\r\n  Preset,\r\n  YearPicker,\r\n  YearTitle,\r\n  Months,\r\n  Month,\r\n} from \"./Selector.styled\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronCircleLeft,\r\n  faChevronCircleRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ndayjs.extend(isSameOrAfter);\r\ndayjs.extend(isSameOrBefore);\r\n\r\nconst Selector = ({ presets, onChange, highlightCol }) => {\r\n  const [yearIndex, setYearIndex] = useState(0);\r\n  const [years, setYears] = useState([]);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let ys = [];\r\n    for (let year = 2010; year <= Number(dayjs().format(\"YYYY\")); year++) {\r\n      const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => {\r\n        let date = dayjs(year + \"-\" + month + \"-01 00:00:00\").toDate();\r\n        return {\r\n          selected: false,\r\n          date,\r\n        };\r\n      });\r\n      ys.push({ year, months });\r\n    }\r\n    setYears(ys);\r\n    setYearIndex(ys.length - 1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selected.length === 2) {\r\n      onChange(selected);\r\n    }\r\n  }, [selected]);\r\n\r\n  const setSelectedLocal = (monthIndex, month) => {\r\n    let ys = [...years];\r\n    ys[yearIndex].months[monthIndex].selected = true;\r\n    setYears(ys);\r\n    if (!selected.length) {\r\n      setSelected([month.date]);\r\n    } else {\r\n      if (dayjs(selected[0]).isBefore(dayjs(month.date))) {\r\n        setSelected([selected[0], month.date]);\r\n      } else {\r\n        setSelected([month.date, selected[0]]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const pickPreset = ({ start, end }) => {\r\n    setSelected([start, end]);\r\n  };\r\n\r\n  const year = years[yearIndex];\r\n\r\n  if (!year) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Modal>\r\n      {presets && presets.length && (\r\n        <Presets>\r\n          <Title>PRESETS</Title>\r\n          {presets.map((p, i) => (\r\n            <Preset onClick={(e) => pickPreset(p)} key={i}>\r\n              {p.title}\r\n            </Preset>\r\n          ))}\r\n        </Presets>\r\n      )}\r\n      <MonthPicker>\r\n        <Title>SELECT A MONTH RANGE:</Title>\r\n        <YearPicker>\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleLeft}\r\n            style={{\r\n              width: 20,\r\n              height: 20,\r\n              opacity: !yearIndex ? 0.2 : 1,\r\n              cursor: !yearIndex ? \"default\" : \"pointer\",\r\n            }}\r\n            onClick={(e) => (yearIndex ? setYearIndex(yearIndex - 1) : null)}\r\n          />\r\n          <YearTitle>{year.year}</YearTitle>\r\n          <FontAwesomeIcon\r\n            icon={faChevronCircleRight}\r\n            style={{\r\n              width: 20,\r\n              height: 20,\r\n              opacity: yearIndex === years.length - 1 ? 0.2 : 1,\r\n              cursor: yearIndex === years.length - 1 ? \"default\" : \"pointer\",\r\n            }}\r\n            onClick={(e) =>\r\n              yearIndex < years.length - 1 ? setYearIndex(yearIndex + 1) : null\r\n            }\r\n          />\r\n        </YearPicker>\r\n        <Months>\r\n          {year.months.map((m, i) => {\r\n            return (\r\n              <Month\r\n                highlightCol={highlightCol}\r\n                className={\r\n                  m.selected === true ||\r\n                    (selected.length === 2 &&\r\n                      dayjs(m.date).isSameOrAfter(\r\n                        dayjs(selected[0]),\r\n                        \"month\"\r\n                      ) &&\r\n                      dayjs(m.date).isSameOrBefore(dayjs(selected[1]), \"month\"))\r\n                    ? \"selected\"\r\n                    : \"\"\r\n                }\r\n                disabled={dayjs(m.date).isAfter(dayjs().endOf(\"month\"))}\r\n                key={i}\r\n                onClick={(e) => setSelectedLocal(i, m)}\r\n              >\r\n                {m.selected} {dayjs(m.date).format(\"MMM\")}\r\n              </Month>\r\n            );\r\n          })}\r\n        </Months>\r\n      </MonthPicker>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default memo(Selector);\r\n","import dayjs from 'dayjs';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Selected, SelectedText, TitleWrapper } from \"./MonthPicker.styled\";\r\nimport Selector from \"./Selector/Selector\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst MonthPicker = ({\r\n  onChange,\r\n  value,\r\n  presets,\r\n  style,\r\n  closeDelay,\r\n  highlightCol,\r\n}) => {\r\n  const [selectOpen, setSelectOpen] = useState(false);\r\n  const [title, setTitle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updateTitle(value);\r\n  }, []);\r\n\r\n  const updateTitle = (v) => {\r\n    if (!v || v.length < 2) {\r\n      return setTitle(\"No dates selected\");\r\n    }\r\n\t\t\r\n    const presetTitle =\r\n      presets && presets.length\r\n        ? presets.find(\r\n            (p) =>\r\n              (dayjs(p.start).isSame(dayjs(v[0]), \"month\") ||\r\n                p.start === v[0]) &&\r\n              (dayjs(p.end).isSame(dayjs(v[1]), \"month\") || p.end === v[1])\r\n          )\r\n        : null;\r\n\r\n    return setTitle(\r\n      presetTitle\r\n        ? presetTitle.title\r\n        : dayjs(v[0]).format(\"MMM YY\") + \" - \" + dayjs(v[1]).format(\"MMM YY\")\r\n    );\r\n  };\r\n\r\n  const localChange = (v) => {\r\n    updateTitle(v);\r\n\r\n    if (typeof onChange === \"function\") {\r\n      onChange([\r\n        v[0] === null\r\n          ? null\r\n          : dayjs(v[0]).startOf(\"month\").format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n        v[1] === null\r\n          ? null\r\n          : dayjs(v[1]).endOf(\"month\").format(\"YYYY-MM-DDTHH:mm:ss\"),\r\n      ]);\r\n    }\r\n\r\n    setTimeout(\r\n      () => {\r\n        setSelectOpen(false);\r\n      },\r\n      closeDelay ? closeDelay : 200\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Selected style={style}>\r\n      <TitleWrapper onClick={(e) => setSelectOpen(!selectOpen)}>\r\n        <SelectedText>{title}</SelectedText>\r\n        <FontAwesomeIcon\r\n          icon={faChevronDown}\r\n          style={{\r\n            width: 14,\r\n            height: 14,\r\n          }}\r\n        />\r\n      </TitleWrapper>\r\n      {selectOpen && (\r\n        <Selector\r\n          presets={presets}\r\n          onChange={localChange}\r\n          highlightCol={highlightCol}\r\n        />\r\n      )}\r\n    </Selected>\r\n  );\r\n};\r\n\r\nexport default MonthPicker;\r\n","import MonthPicker from \"./components/MonthPicker/MonthPicker\";\r\nimport dayjs from \"dayjs\";\r\n\r\nfunction App() {\r\n\tconst presets = [\r\n    {\r\n      title: \"This month\",\r\n      start: dayjs().startOf(\"month\").toDate(),\r\n      end: dayjs().endOf(\"month\").toDate()\r\n    },\r\n    {\r\n      title: \"Past 3 months\",\r\n      start: dayjs().subtract(2, \"month\").startOf(\"month\").toDate(),\r\n      end: dayjs().endOf(\"month\").toDate()\r\n    },\r\n    {\r\n      title: \"Past 6 months\",\r\n      start: dayjs().subtract(5, \"month\").startOf(\"month\").toDate(),\r\n      end: dayjs().endOf(\"month\").toDate()\r\n    },\r\n    {\r\n      title: \"This Year\",\r\n      start: dayjs().startOf(\"year\").toDate(),\r\n      end: dayjs().endOf(\"year\").toDate()\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: 300, margin: \"50px auto\" }}>\r\n      <MonthPicker\r\n        highlightCol=\"#f60\"\r\n        presets={presets}\r\n        onChange={(range) => console.log(range)}\r\n        closeDelay={500}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}